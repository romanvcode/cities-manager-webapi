<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CitiesManager.WebAPI</name>
    </assembly>
    <members>
        <member name="T:CitiesManager.WebAPI.Controllers.v1.AccountController">
            <summary>
            Represents a RESTful service of account.
            </summary>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.#ctor(Microsoft.AspNetCore.Identity.UserManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{CitiesManager.Core.Identity.ApplicationRole})">
            <summary>
            Creates a new instance of a <see cref="T:CitiesManager.WebAPI.Controllers.v1.AccountController"/>.
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
            <param name="roleManager"></param>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.PostRegister(CitiesManager.Core.DTO.RegisterDTO)">
            <summary>
            Register a new user.
            </summary>
            <param name="registerDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.IsEmailAlreadyRegistered(System.String)">
            <summary>
            Check if the email is already registered.
            </summary>
            <param name="email"></param>
            <returns>True or False.</returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.PostLogin(CitiesManager.Core.DTO.LoginDTO)">
            <summary>
            Login a user.
            </summary>
            <param name="loginDTO"></param>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.GetLogout">
            <summary>
            Logout a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.GetCities">
            <summary>
            To get all cities (including city ID and city name) from the 'cities' table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v2.CitiesController.GetCities">
            <summary>
            To get all cities (only city name) from the 'cities' table.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
